parameters:
  - name: buildConfiguration
    type: string
    default: 'Release'
    values:
      - 'Release'
      - 'Debug'

  - name: URL_TO_NEXUS_SERVER
    type: string
    default: ''
  - name: NEXUS_REPOSITORY_NAME
    type: string
    default: ''
  - name: LOGIN_AND_PASSWORD_BASE64
    type: string
    default: ''
  - name: DIR_NAME
    type: string
    default: ''
  - name: PATH_TO_FILE
    type: string
    default: ''
  - name: FILE_NAME_IN_NEXUS_REPO
    type: string

  - name: checkmarxTenantName
    type: string
    default: ''
  - name: checkmarxService
    type: string
    default: 'Checkmarx_AST-ESRI-DevSecOps'
  - name: qualysWasService
    type: string
    default: ''
  - name: qualyswebApplication
    type: string
    default: ''
  - name: qualysScanType
    type: string
    default: 'VULNERABILITY'
  - name: qualysDataCheckFrequency
    type: string
    default : '5'
  - name: qualysWaitTimeforScanResult
    type: string
    default : '60*24'


variables:
  - name: solution
    value: '**/*.sln'
  - name: pathToTest
    value: '**/*Helloworld.csproj'
  - name: pathToPublish
    value: '$(Build.ArtifactStagingDirectory)'
  - name: verbosityRestore
    value: 'Detailed'


pool:
  vmImage: 'windows-latest'

stages:
  - stage: CI
    displayName: Build and Test app
    jobs:
      - job:
        steps:
          - checkout: self

          - task: NuGetToolInstaller@1
            displayName: 'NuGet: Install NuGet tool'

          - task: NuGetAuthenticate@0
            displayName: 'NuGet: Install NuGet credprovider'

          - task: NuGetCommand@2
            inputs:
              command: 'restore'
              restoreSolution: '${{ variables.solution }}'
              feedsToUse: 'select'


          # DotNet NuGet restore
          - task: DotNetCoreCLI@2
            displayName: 'DotNetCore: Restore packages for ${{ variables.solution }}'
            enabled: true
            inputs:
              command: restore
              projects: ${{ variables.solution }}
              feedsToUse: 'select'
              includeNuGetOrg: true
              verbosityRestore: '${{ variables.verbosityRestore }}'

          # DotNet build
          - task: DotNetCoreCLI@2
            displayName: 'DotNetCore: Build ${{ variables.solution }}'
            enabled: true
            inputs:
              command: 'build'
              projects: ${{ variables.solution }}
              arguments: '-o $(Build.ArtifactStagingDirectory) --no-restore -c ${{ parameters.buildConfiguration }}'

          - task: DotNetCoreCLI@2
            displayName: 'DotNetCore: Test App'
            enabled: true
            inputs:
              command: 'test'
              projects: '**/*Tests.csproj'


          - template: ./template-sast-dast-tool.yml
            parameters:
              checkmarxTenantName:
              checkmarxService:
              qualysWasService:
              qualyswebApplication:
              qualysScanType:
              qualysDataCheckFrequency:
              qualysWaitTimeforScanResult:


          # DotNet Publish
          - task: DotNetCoreCLI@2
            displayName: 'DotNetCore: Publish solution files'
            enabled: true
            inputs:
              command: 'publish'
              publishWebProjects: false
              zipAfterPublish: false
              projects: ${{ variables.solution }}
              arguments: '-o ${{ variables.pathToPublish }} --no-restore -c ${{ parameters.buildConfiguration }}'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish build artifacts'
            inputs:
              ArtifactName: $(Build.Repository.Name)
              targetPath: '${{variables.pathToPublish}}'

          - template: ./template-upload-artifact-nexus.yml
            parameters:
              URL_TO_NEXUS_SERVER: ${{ parameters.URL_TO_NEXUS_SERVER }}
              NEXUS_REPOSITORY_NAME: ${{ parameters.NEXUS_REPOSITORY_NAME }}
              LOGIN_AND_PASSWORD_BASE64: ${{ parameters.LOGIN_AND_PASSWORD_BASE64 }}
              DIR_NAME: ${{ parameters.DIR_NAME }}
              PATH_TO_FILE: ${{ parameters.PATH_TO_FILE }}
              FILE_NAME_IN_NEXUS_REPO: ${{ parameters.FILE_NAME_IN_NEXUS_REPO }}
              pathToPublish: ${{ variables.pathToPublish }}
